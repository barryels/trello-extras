{
  "version": 3,
  "sources": [
    "../../node_modules/browser-pack/_prelude.js",
    "../../src/features/CardChecklistCompletionLine/CardChecklistCompletionLine.js",
    "../../src/features/CardFilterByLabel/CardFilterByLabel.js",
    "../../src/features/CardPoints/CardPoints.js",
    "../../src/features/Core/Utils.js",
    "../../src/features/ListSearch/ListSearch.js",
    "../../src/index.user.js"
  ],
  "names": [],
  "mappingshLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var Utils = require('./../Core/Utils');\n\nmodule.exports = function () {\n\n\tfunction init() {\n\t\tvar windowLocationHREF = window.location.href;\n\n\t\tupdate();\n\n\t\tsetInterval(function () {\n\t\t\tif (windowLocationHREF !== window.location.href) {\n\t\t\t\twindowLocationHREF = window.location.href;\n\t\t\t\tupdate();\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tfunction update() {\n\t\tUtils.getCards().each(function () {\n\t\t\tvar progressText = Utils.getCardChecklists($(this)).find('.badge-text').text();\n\t\t\tdrawProgressLine($(this), progressText);\n\t\t});\n\t}\n\n\tfunction drawProgressLine(card, progressText) {\n\t\tvar completed = 0,\n\t\t\ttotal = 1,\n\t\t\tpercent = 0,\n\t\t\tprogressStatus = 'not_started',\n\t\t\tprogressLine;\n\n\t\tif (progressText) {\n\t\t\tif (progressText.indexOf('/')) {\n\t\t\t\tcompleted = progressText.split('/')[0];\n\t\t\t\ttotal = progressText.split('/')[1];\n\t\t\t\tpercent = (completed / total) * 100;\n\n\t\t\t\tif (percent === 0) {\n\t\t\t\t\tprogressStatus = 'not_started';\n\t\t\t\t}\n\n\t\t\t\tif (percent > 0) {\n\t\t\t\t\tprogressStatus = 'started';\n\t\t\t\t}\n\n\t\t\t\tif (percent > 25) {\n\t\t\t\t\tprogressStatus = 'in_progress';\n\t\t\t\t}\n\n\t\t\t\tif (percent > 75) {\n\t\t\t\t\tprogressStatus = 'nearly_done';\n\t\t\t\t}\n\n\t\t\t\tif (percent === 100) {\n\t\t\t\t\tprogressStatus = 'complete';\n\t\t\t\t}\n\n\t\t\t\tcard.append('<span class=\"be-CardChecklistCompletionLine be-CardChecklistCompletionLine--' + progressStatus + '\"></span>');\n\n\t\t\t\tprogressLine = card.find('.be-CardChecklistCompletionLine');\n\t\t\t\tprogressLine.css('width', (percent + '%'));\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tinit: init\n\t}\n\n}();\n",
    "'use strict';\n\nvar Utils = require('./../Core/Utils');\n\nmodule.exports = function () {\n\n\tvar init = function () {\n\t\tvar windowLocationHREF = window.location.href;\n\n\t\taddLabelFilterToListHeader();\n\n\t\tupdate();\n\n\t\tsetInterval(function () {\n\t\t\tif (windowLocationHREF !== window.location.href) {\n\t\t\t\twindowLocationHREF = window.location.href;\n\t\t\t\tupdate();\n\t\t\t}\n\t\t}, 100);\n\t};\n\n\tvar addLabelFilterToListHeader = function (list) {\n\n\t\tUtils.getLists().each(function () {\n\t\t\tvar list = $(this);\n\t\t\tvar listHeader = list.find('.list-header'),\n\t\t\t\tfilterTriggerButton,\n\t\t\t\tfilterCloseButton,\n\t\t\t\tselectAllButton,\n\t\t\t\tselectNoneButton,\n\t\t\t\tfilterList;\n\n\t\t\tlistHeader.append('<a class=\"be-CardFilterByLabel__trigger dark-hover\"><span class=\"icon-sm icon-label\"></span></a>');\n\t\t\tlistHeader.append('<div class=\"be-CardFilterByLabel__list\">' +\n\t\t\t\t'<div class=\"pop-over-header js-pop-over-header\"><span class=\"pop-over-header-title\">Filter by Label</span><a href=\"#\" class=\"pop-over-header-close-btn icon-sm icon-close\"></a></div>' +\n\t\t\t\t'<div class=\"be-CardFilterByLabel__buttons\">' +\n\t\t\t\t'<button class=\"be-CardFilterByLabel__btn-select-none\">Select None</button>' +\n\t\t\t\t'<button class=\"be-CardFilterByLabel__btn-select-all\">Select All</button>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<hr />' +\n\t\t\t\t'<div class=\"pop-over-content js-pop-over-content u-fancy-scrollbar js-tab-parent\"></div>' +\n\t\t\t\t'</div>');\n\n\t\t\tfilterTriggerButton = listHeader.find('.be-CardFilterByLabel__trigger');\n\t\t\tfilterCloseButton = listHeader.find('.pop-over-header-close-btn');\n\t\t\tfilterList = listHeader.find('.be-CardFilterByLabel__list');\n\t\t\tselectAllButton = listHeader.find('.be-CardFilterByLabel__btn-select-all');\n\t\t\tselectNoneButton = listHeader.find('.be-CardFilterByLabel__btn-select-none');\n\n\t\t\tfilterList.hide(0);\n\n\t\t\tfilterTriggerButton.bind('click', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\t$(this).closest('.list-header').find('.be-CardFilterByLabel__list').toggle();\n\t\t\t});\n\n\t\t\tfilterCloseButton.bind('click', function () {\n\t\t\t\t$(this).closest('.list-header').find('.be-CardFilterByLabel__list').hide();\n\t\t\t});\n\n\t\t\tselectAllButton.bind('click', function () {\n\t\t\t\tvar filterListContent = $(this).closest('.be-CardFilterByLabel__list').find('.pop-over-content');\n\t\t\t\tfilterListContent.find('[type=\"checkbox\"]').prop('checked', true).attr('checked', 'checked');\n\t\t\t\tupdateFilter(filterListContent);\n\t\t\t});\n\n\t\t\tselectNoneButton.bind('click', function () {\n\t\t\t\tvar filterListContent = $(this).closest('.be-CardFilterByLabel__list').find('.pop-over-content');\n\t\t\t\tfilterListContent.find('[type=\"checkbox\"]').prop('checked', false).removeAttr('checked');\n\t\t\t\tupdateFilter(filterListContent);\n\t\t\t});\n\n\t\t});\n\n\t\t$(document).bind('click', function () {\n\t\t\t// $('.be-CardFilterByLabel__list').hide();\n\t\t});\n\n\t};\n\n\n\tfunction update() {\n\t\tUtils.getLists().each(function () {\n\t\t\tvar list = $(this);\n\n\t\t\tvar filterListContent = list.find('.be-CardFilterByLabel__list .pop-over-content'),\n\t\t\t\tlistLabelsTemp = [],\n\t\t\t\tlistLabels = [],\n\t\t\t\ti,\n\t\t\t\tj;\n\n\t\t\tUtils.getCards($(this)).each(function () {\n\t\t\t\tUtils.getCardLabels($(this)).each(function () {\n\t\t\t\t\tvar cardLabel = {\n\t\t\t\t\t\tcolour: Utils.getCardLabelColourFromClass($(this).attr('class')),\n\t\t\t\t\t\ttitle: $(this).attr('title')\n\t\t\t\t\t};\n\n\t\t\t\t\tlistLabelsTemp.push(cardLabel);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Only push unique labels into the listLabels array\n\t\t\tfor (i = 0; i < listLabelsTemp.length; i++) {\n\t\t\t\tvar exists;\n\n\t\t\t\tfor (j = 0; j < listLabels.length; j++) {\n\t\t\t\t\texists = false;\n\n\t\t\t\t\tif (listLabels[j].colour === listLabelsTemp[i].colour) {\n\t\t\t\t\t\texists = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!exists) {\n\t\t\t\t\tlistLabels.push(listLabelsTemp[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateLabelFilterList(filterListContent, listLabels);\n\n\t\t});\n\n\t}\n\n\n\tfunction updateLabelFilterList(filterListContent, listLabels) {\n\t\tvar i;\n\n\t\tfilterListContent.html('');\n\n\t\tfilterListContent.append('<label class=\"be-CardFilterByLabel__list__item\"><input type=\"checkbox\" name=\"no-labels\" checked=\"checked\" /><span class=\"be-CardFilterByLabel__list__title\">No Labels</span></label>');\n\n\t\tfor (i = 0; i < listLabels.length; i++) {\n\t\t\tvar listLabelTitle = listLabels[i].title,\n\t\t\t\tcolour = listLabels[i].colour;\n\n\t\t\tif (!listLabelTitle) {\n\t\t\t\tlistLabelTitle = '(' + colour.substr(0, 1).toUpperCase() + colour.substr(1, colour.length) + ')';\n\t\t\t}\n\n\t\t\tfilterListContent.append('<label class=\"be-CardFilterByLabel__list__item\"><input type=\"checkbox\" name=\"' + colour + '\" checked=\"checked\" /><span class=\"be-CardFilterByLabel__list__icon card-label-' + colour + '\">&nbsp;</span><span class=\"be-CardFilterByLabel__list__title\">' + listLabelTitle + '</span></label>');\n\t\t}\n\n\t\tfilterListContent.find('[type=\"checkbox\"]').change(function () {\n\t\t\tupdateFilter(filterListContent);\n\t\t});\n\n\t\tupdateFilter(filterListContent);\n\t}\n\n\n\tfunction updateFilter(filterListContent) {\n\t\tvar list = filterListContent.closest('.list'),\n\t\t\tlabelsToFilterBy = [];\n\n\t\tfilterListContent.find('[type=\"checkbox\"]').each(function () {\n\t\t\tvar name = $(this).attr('name');\n\n\t\t\tif (this.checked) {\n\t\t\t\tlabelsToFilterBy.push(name);\n\t\t\t}\n\t\t});\n\n\t\tlist.attr('data-be-CardFilterByLabel', labelsToFilterBy.join(','));\n\n\t\tUtils.filterListCards(list);\n\t}\n\n\n\treturn {\n\t\tinit: init\n\t}\n\n}();\n",
    "'use strict';\n\nvar Utils = require('./../Core/Utils');\n\nmodule.exports = function () {\n\n\t/*\n\t Sums up the card points in a particular list\n\t */\n\tfunction init(lists) {\n\t\tvar windowLocationHREF = window.location.href;\n\n\t\tupdate(lists);\n\n\t\tsetInterval(function () {\n\t\t\tif (windowLocationHREF !== window.location.href) {\n\t\t\t\twindowLocationHREF = window.location.href;\n\t\t\t\tupdate(lists);\n\t\t\t}\n\t\t}, 100);\n\n\t}\n\n\tfunction update(lists) {\n\t\tlists.each(function () {\n\t\t\tvar list = $(this),\n\t\t\t\tlistHeader = list.find('.list-header'),\n\t\t\t\tbeListPointsTotal,\n\t\t\t\tlistCards = Utils.getCards(list),\n\t\t\t\ttotal = 0;\n\n\t\t\tbeListPointsTotal = listHeader.find('.be-list-points-total');\n\t\t\tif (beListPointsTotal.length === 0) {\n\t\t\t\tlistHeader.append('<p class=\"be-list-points-total\"></p>');\n\t\t\t\tbeListPointsTotal = listHeader.find('.be-list-points-total');\n\t\t\t}\n\n\t\t\tlistCards.each(function () {\n\t\t\t\tvar listCard = $(this),\n\t\t\t\t\tcardID = listCard.find('.card-short-id').text(),\n\t\t\t\t\ttitle = listCard.find('.list-card-title').text(),\n\t\t\t\t\ttitleStrippedOfNumber = title.substr(cardID.length, title.length),\n\t\t\t\t\tcardPoints = 0;\n\n\t\t\t\tif (titleStrippedOfNumber.indexOf('(') === 0) {\n\t\t\t\t\tcardPoints = parseInt(titleStrippedOfNumber.substring(1, titleStrippedOfNumber.indexOf(')') + 1));\n\n\t\t\t\t\tif (isNaN(cardPoints)) {\n\t\t\t\t\t\tcardPoints = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttotal += cardPoints;\n\t\t\t});\n\n\t\t\tbeListPointsTotal.html(total + ' points');\n\n\t\t});\n\t}\n\n\n\treturn {\n\t\tinit: init\n\t}\n\n}();\n",
    "'use strict';\n\nmodule.exports = function () {\n\n\tvar lists = null;\n\n\tfunction getListCardsTotal(list) {\n\t\treturn list.find('.list-card').length;\n\t}\n\n\tfunction addListsHeaderCardCounter(lists) {\n\n\t\tlists.each(function () {\n\t\t\tvar list = $(this),\n\t\t\t\tlistCards = list.find('.list-card'),\n\t\t\t\tlistHeader = list.find('.list-header');\n\n\t\t\tlistHeader.append('<p class=\"be-ListHeaderCardCounter\">' + listCards.length + ' cards</p>');\n\n\t\t});\n\t}\n\n\tfunction getListHeaderCardCounter(list) {\n\t\tif (list) {\n\t\t\treturn list.find('.be-ListHeaderCardCounter');\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction updateListHeaderNumCards(list, total, found) {\n\t\tvar listHeaderNumCards = getListHeaderCardCounter(list);\n\n\t\tif (listHeaderNumCards) {\n\t\t\tlistHeaderNumCards.attr('data-total', total);\n\n\t\t\tif (found === total) {\n\t\t\t\tlistHeaderNumCards.html(total + ' cards');\n\t\t\t} else {\n\t\t\t\tlistHeaderNumCards.html(found + ' / ' + total + ' cards');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\tfunction isLoaded() {\n\t\treturn getLists();\n\t}\n\n\n\tfunction getLists() {\n\t\tif (!lists) {\n\t\t\tlists = $('.list');\n\t\t}\n\t\treturn lists;\n\t}\n\n\tfunction getCards(list) {\n\t\tif (list) {\n\t\t\treturn list.find('.list-card');\n\t\t}\n\t\treturn $('.list-card');\n\t}\n\n\tfunction getCardChecklists(card) {\n\t\treturn card.find('[title=\"Checklist items\"]');\n\t}\n\n\tfunction getCardLabels(card) {\n\t\treturn card.find('.card-label');\n\t}\n\n\tfunction getCardLabelColourFromClass(className) {\n\t\tvar classes = className.split(' '),\n\t\t\ti,\n\t\t\tresult = '';\n\n\t\tfor (i = 0; i < classes.length; i++) {\n\t\t\tif (classes[i].indexOf('card-label-') > -1) {\n\t\t\t\tresult = classes[i].split('-')[2];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\n\tfunction filterListCards(list) {\n\t\tvar searchTextToFilterBy = '',\n\t\t\tsearchTextToFilterByAsWords = null,\n\t\t\tlabelsToFilterBy = null,\n\t\t\tfoundCardsTotal = 0,\n\t\t\tlistCards = list.find('.list-card'),\n\t\t\tlistCardsTotal = getListCardsTotal(list);\n\n\t\t// Search text\n\t\tif (list.attr('data-be-ListSearch')) {\n\t\t\tsearchTextToFilterBy = list.attr('data-be-ListSearch');\n\t\t\tsearchTextToFilterByAsWords = searchTextToFilterBy.split(' ');\n\t\t}\n\n\t\t// Label filter\n\t\tif (list.attr('data-be-CardFilterByLabel')) {\n\t\t\tlabelsToFilterBy = list.attr('data-be-CardFilterByLabel').split(',');\n\t\t}\n\n\t\tlistCards.each(function () {\n\t\t\tvar card = $(this),\n\t\t\t\tshowCard = false,\n\t\t\t\ttitle = card.find('.list-card-title').text(),\n\t\t\t\tusernames = [],\n\t\t\t\tlistCardLabels = getCardLabels(card),\n\t\t\t\ti,\n\t\t\t\tj;\n\n\n\t\t\t// Search text\n\t\t\tif (searchTextToFilterBy === '') {\n\n\t\t\t\tshowCard = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Search by username\n\t\t\t\tcard.find('.member-avatar').each(function () {\n\t\t\t\t\tusernames.push($(this).attr('title'));\n\t\t\t\t});\n\n\t\t\t\tif (usernames.length > 0) {\n\t\t\t\t\tfor (i = 0; i < searchTextToFilterByAsWords.length; i++) {\n\t\t\t\t\t\tfor (j = 0; j < usernames.length; j++) {\n\t\t\t\t\t\t\tif (usernames[j].toLowerCase().indexOf(searchTextToFilterByAsWords[i].toLowerCase()) > -1) {\n\t\t\t\t\t\t\t\tshowCard = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t// Search by title\n\t\t\t\tif (showCard === false) {\n\t\t\t\t\tif (title.toLowerCase().indexOf(searchTextToFilterBy.toLowerCase()) > -1) {\n\t\t\t\t\t\tshowCard = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowCard = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Label filter\n\t\t\tif (labelsToFilterBy) {\n\t\t\t\tif (showCard === true) {\n\t\t\t\t\tif (listCardLabels.length > 0) {\n\t\t\t\t\t\tshowCard = false;\n\n\t\t\t\t\t\tlistCardLabels.each(function () {\n\t\t\t\t\t\t\tvar colour = getCardLabelColourFromClass($(this).attr('class'));\n\n\t\t\t\t\t\t\tif (labelsToFilterBy.indexOf(colour) > -1) {\n\t\t\t\t\t\t\t\tshowCard = true;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (labelsToFilterBy.indexOf('no-labels') > -1) {\n\t\t\t\t\t\t\tshowCard = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowCard = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tshowCard = false;\n\t\t\t}\n\n\t\t\tif (showCard) {\n\t\t\t\tcard.removeClass('hide');\n\t\t\t} else {\n\t\t\t\tcard.addClass('hide');\n\t\t\t}\n\n\t\t\tif (!card.hasClass('hide')) {\n\t\t\t\tfoundCardsTotal += 1;\n\t\t\t}\n\n\t\t});\n\n\t\tupdateListHeaderNumCards(list, listCardsTotal, foundCardsTotal);\n\n\t}\n\n\tfunction removeDuplicateObjectsFromArray(arr, field) {\n\t\tvar u = [];\n\t\tarr.reduce(function (a, b) {\n\t\t\tif (a[field] !== b[field]) u.push(b);\n\t\t\treturn b;\n\t\t}, []);\n\t\treturn u;\n\t}\n\n\n\tfunction init() {\n\t\taddListsHeaderCardCounter(getLists());\n\t}\n\n\treturn {\n\t\tinit: init,\n\t\tisLoaded: isLoaded,\n\t\tgetLists: getLists,\n\t\tgetCards: getCards,\n\t\tgetCardChecklists: getCardChecklists,\n\t\tgetCardLabels: getCardLabels,\n\t\tgetListCardsTotal: getListCardsTotal,\n\t\tupdateListHeaderNumCards: updateListHeaderNumCards,\n\t\tgetListHeaderCardCounter: getListHeaderCardCounter,\n\t\tgetCardLabelColourFromClass: getCardLabelColourFromClass,\n\t\tfilterListCards: filterListCards,\n\t\tremoveDuplicateObjectsFromArray: removeDuplicateObjectsFromArray\n\t}\n\n}();\n",
    "'use strict';\n\nvar Utils = require('./../Core/Utils');\n\nmodule.exports = function () {\n\n\t/*\n\t Adds a search box to each list for simple filtering of cards based on their title\n\t */\n\tvar init = function (lists) {\n\t\tlists.each(function () {\n\t\t\taddSearchToList($(this));\n\t\t})\n\t};\n\n\tvar addSearchToList = function (list) {\n\t\tvar listHeader = list.find('.list-header'),\n\t\t\tinputSearch;\n\n\t\tlistHeader.append('<input class=\"be-ListSearch__input\" placeholder=\"Search...\" type=\"text\" />');\n\n\t\tinputSearch = listHeader.find('.be-ListSearch__input');\n\t\tinputSearch.bind('keyup', function () {\n\t\t\tlist.attr('data-be-ListSearch', $(this).val());\n\t\t\tUtils.filterListCards(list);\n\t\t});\n\n\t};\n\n\treturn {\n\t\tinit: init\n\t}\n\n}();\n",
    "'use strict';\n\n// ==UserScript==\n//\n// @namespace      http://www.barryels.com/\n//\n// @history        1.0 first version\n//\n// ==/UserScript==\n\nvar Utils = require('./features/Core/Utils');\nvar ListSearch = require('./features/ListSearch/ListSearch');\nvar CardPoints = require('./features/CardPoints/CardPoints');\nvar CardChecklistCompletionLine = require('./features/CardChecklistCompletionLine/CardChecklistCompletionLine');\nvar CardFilterByLabel = require('./features/CardFilterByLabel/CardFilterByLabel');\n\nwindow.$ = window.jQuery = jQuery.noConflict(true);\n\nwindow.addEventListener(\"load\", init, false);\n\nfunction init() {\n\tvar loadInterval;\n\n\tloadInterval = window.setInterval(function () {\n\t\tif (Utils.isLoaded()) {\n\t\t\twindow.clearInterval(loadInterval);\n\t\t\tonLoaded();\n\t\t}\n\t}, 100);\n}\n\nfunction onLoaded() {\n\tUtils.init();\n\tCardPoints.init(Utils.getLists());\n\tListSearch.init(Utils.getLists());\n\tCardChecklistCompletionLine.init();\n\tCardFilterByLabel.init(Utils.getLists());\n}\n"
  ]
}